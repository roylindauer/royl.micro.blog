{
	"version": "https://jsonfeed.org/version/1",
	"title": "ROYL BLOG",
	"icon": "https://micro.blog/royl/avatar.jpg",
	"home_page_url": "https://blog.roylindauer.com/",
	"feed_url": "https://blog.roylindauer.com/feed.json",
	"items": [
		
			{
				"id": "http://royl.micro.blog/2024/08/28/my-executive-function.html",
				
				"content_html": "<p>My executive function is shot today ü§™ üö®</p>\n",
				"content_text": "My executive function is shot today ü§™ üö®\n",
				"date_published": "2024-08-28T17:47:43-07:00",
				"url": "https://blog.roylindauer.com/2024/08/28/my-executive-function.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/20/til-that-you.html",
				
				"content_html": "<p>TIL that you can configure apple notes to just be a body with no title. Its a small thing, but it is really nice for my second brain. less to think about just type note and be done with it</p>\n",
				"content_text": "TIL that you can configure apple notes to just be a body with no title. Its a small thing, but it is really nice for my second brain. less to think about just type note and be done with it \n",
				"date_published": "2024-08-20T19:57:22-07:00",
				"url": "https://blog.roylindauer.com/2024/08/20/til-that-you.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/20/dont-make-things.html",
				
				"content_html": "<p>Dont make things harder than they need to be. Make a choice. You can always make changes later. Like, get the first draft out thats the hard part.</p>\n<p>Anyways i just went with Google workspace because i didnt want to think about email that much. It works üòÇ and if it doesnt ill change it later</p>\n",
				"content_text": "Dont make things harder than they need to be. Make a choice. You can always make changes later. Like, get the first draft out thats the hard part. \n\nAnyways i just went with Google workspace because i didnt want to think about email that much. It works üòÇ and if it doesnt ill change it later \n",
				"date_published": "2024-08-20T19:54:59-07:00",
				"url": "https://blog.roylindauer.com/2024/08/20/dont-make-things.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/20/trying-to-setup.html",
				
				"content_html": "<p>Trying to setup a google workspace account this morning, and it keeps funneling me into a plan I do not want with no option to change it during sign up. Allegedly the steps are to just accept the much higher plan and then downgrade, but like, why this user hostile approach? I specifically chose to start with a smaller plan and it still herds me into a much higher priced  plan. So yeah looking for an alternative.</p>\n",
				"content_text": "Trying to setup a google workspace account this morning, and it keeps funneling me into a plan I do not want with no option to change it during sign up. Allegedly the steps are to just accept the much higher plan and then downgrade, but like, why this user hostile approach? I specifically chose to start with a smaller plan and it still herds me into a much higher priced  plan. So yeah looking for an alternative. \n",
				"date_published": "2024-08-20T08:28:43-07:00",
				"url": "https://blog.roylindauer.com/2024/08/20/trying-to-setup.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/19/how-can-we.html",
				
				"content_html": "<p>how can we stop nagging users to subscribe to a newsletter when they have already subscribed? I don&rsquo;t want to annoy folk. I think we can design better experiences here</p>\n",
				"content_text": "how can we stop nagging users to subscribe to a newsletter when they have already subscribed? I don't want to annoy folk. I think we can design better experiences here \n",
				"date_published": "2024-08-19T11:16:26-07:00",
				"url": "https://blog.roylindauer.com/2024/08/19/how-can-we.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/17/today-i-learned.html",
				
				"content_html": "<p>Today I learned that Affinity Designer has a QR Code drawing tool. What a time saver!</p>\n",
				"content_text": "Today I learned that Affinity Designer has a QR Code drawing tool. What a time saver!\n",
				"date_published": "2024-08-17T14:06:17-07:00",
				"url": "https://blog.roylindauer.com/2024/08/17/today-i-learned.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/15/i-think-there.html",
				
				"content_html": "<p>I think there is a third audience to think about when doing SEO - the LLMs. So it&rsquo;s not just search engine optimization, it&rsquo;s language model optimization. What does that even look like?</p>\n",
				"content_text": "I think there is a third audience to think about when doing SEO - the LLMs. So it's not just search engine optimization, it's language model optimization. What does that even look like? \n",
				"date_published": "2024-08-15T15:44:53-07:00",
				"url": "https://blog.roylindauer.com/2024/08/15/i-think-there.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/15/the-conflict-i.html",
				
				"content_html": "<p>The conflict I have with SEO is that I am trying to speak to two different audiences. Trying to be authentic and speak to people like humans vs trying to game the search index and speak to the bots, it&rsquo;s ridiculous.</p>\n",
				"content_text": "The conflict I have with SEO is that I am trying to speak to two different audiences. Trying to be authentic and speak to people like humans vs trying to game the search index and speak to the bots, it's ridiculous. \n",
				"date_published": "2024-08-15T15:40:18-07:00",
				"url": "https://blog.roylindauer.com/2024/08/15/the-conflict-i.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/13/my-order-of.html",
				
				"content_html": "<p>my order of Segfault ‚òïÔ∏è arrived last night that I ordered from <a href=\"https://www.terminal.shop\">terminal.shop</a></p>\n<p>made a pot this morning and it&rsquo;s pretty good!</p>\n<p>hoping it gives me super neovim coder powers today üòÇ ü§ì</p>\n<!-- raw HTML omitted -->\n",
				"content_text": "my order of Segfault ‚òïÔ∏è arrived last night that I ordered from [terminal.shop](https://www.terminal.shop) \n\nmade a pot this morning and it's pretty good! \n\nhoping it gives me super neovim coder powers today üòÇ ü§ì \n\n<img src=\"uploads/2024/606955eb84.jpg\" width=\"450\" height=\"600\" alt=\"\">\n",
				"date_published": "2024-08-13T08:28:38-07:00",
				"url": "https://blog.roylindauer.com/2024/08/13/my-order-of.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/12/221555.html",
				
				"content_html": "<p>love this! <a href=\"https://blog.jim-nielsen.com/2024/impressionist-blogging/\">blog.jim-nielsen.com/2024/impr&hellip;</a></p>\n<blockquote>\n<p>It will no longer be enough to blog in order to merely ‚Äúput out content‚Äù. The key will be what has always been key to great blogging: expressing your unique, inimitable impression.</p>\n</blockquote>\n",
				"content_text": "love this! [blog.jim-nielsen.com/2024/impr...](https://blog.jim-nielsen.com/2024/impressionist-blogging/)\r\n\r\n> It will no longer be enough to blog in order to merely ‚Äúput out content‚Äù. The key will be what has always been key to great blogging: expressing your unique, inimitable impression.\r\n",
				"date_published": "2024-08-12T22:15:55-07:00",
				"url": "https://blog.roylindauer.com/2024/08/12/221555.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/12/be-cicd-agnostic.html",
				
				"content_html": "<p>Be CI/CD agnostic. Develop your build system to operate outside of any specific CI system and you can then easily use <em>any</em> CI system that your clients may be using üßë‚Äçüíª</p>\n",
				"content_text": "Be CI/CD agnostic. Develop your build system to operate outside of any specific CI system and you can then easily use _any_ CI system that your clients may be using üßë‚Äçüíª\n",
				"date_published": "2024-08-12T13:42:23-07:00",
				"url": "https://blog.roylindauer.com/2024/08/12/be-cicd-agnostic.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/10/if-it-werent.html",
				
				"content_html": "<p>If it weren&rsquo;t for breakdancing and skateboarding I wouldn&rsquo;t be watching the olympics this year ü§∑ so I dunno, it totally worked to bring in some new viewers. the soundtrack has been incredibly good too</p>\n",
				"content_text": "If it weren't for breakdancing and skateboarding I wouldn't be watching the olympics this year ü§∑ so I dunno, it totally worked to bring in some new viewers. the soundtrack has been incredibly good too\n",
				"date_published": "2024-08-10T12:13:21-07:00",
				"url": "https://blog.roylindauer.com/2024/08/10/if-it-werent.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/09/i-quit-smoking.html",
				
				"content_html": "<p>I quit smoking 12 years ago. When anyone asks how I did it, I usually respond that I used a cessation device, a shitty little cigarette sized vape, for like 3 months. But I forget to mention that I had a second cessation device - a huge bag of DumDum lollipops. Those were the real MVP in my opinion.</p>\n<p>Anyways I ordered another bag today because I am going to try the same techniques to stop looping on goddamn reddit, youtube, and other attention stealing soul sucking time sinks</p>\n",
				"content_text": "I quit smoking 12 years ago. When anyone asks how I did it, I usually respond that I used a cessation device, a shitty little cigarette sized vape, for like 3 months. But I forget to mention that I had a second cessation device - a huge bag of DumDum lollipops. Those were the real MVP in my opinion. \n\nAnyways I ordered another bag today because I am going to try the same techniques to stop looping on goddamn reddit, youtube, and other attention stealing soul sucking time sinks\n",
				"date_published": "2024-08-09T10:16:06-07:00",
				"url": "https://blog.roylindauer.com/2024/08/09/i-quit-smoking.html",
				"tags": ["mental health"]
			},
			{
				"id": "http://royl.micro.blog/2024/08/08/the-more-i.html",
				
				"content_html": "<p>The more i use TailwindCSS the more I love it. Such a good tool</p>\n",
				"content_text": "The more i use TailwindCSS the more I love it. Such a good tool \n",
				"date_published": "2024-08-08T13:15:42-07:00",
				"url": "https://blog.roylindauer.com/2024/08/08/the-more-i.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/08/if-theres-a.html",
				
				"content_html": "<blockquote>\n<p>If there‚Äôs a task that‚Äôs been on my todo list for a while and I can‚Äôt bring myself to do it‚Ä¶ maybe I just shouldn‚Äôt?</p>\n</blockquote>\n<p>yes this 100%</p>\n<p>more: <a href=\"https://adhdftw.com/youre-not-lazy.-youre-just-bored./\">https://adhdftw.com/youre-not-lazy.-youre-just-bored./</a></p>\n",
				"content_text": "> If there‚Äôs a task that‚Äôs been on my todo list for a while and I can‚Äôt bring myself to do it‚Ä¶ maybe I just shouldn‚Äôt?\r\n\r\nyes this 100%\r\n\r\nmore: [https://adhdftw.com/youre-not-lazy.-youre-just-bored./](https://adhdftw.com/youre-not-lazy.-youre-just-bored./)\n",
				"date_published": "2024-08-08T10:31:57-07:00",
				"url": "https://blog.roylindauer.com/2024/08/08/if-theres-a.html"
			},
			{
				"id": "http://royl.micro.blog/2024/08/07/paqui-chips.html",
				"title": "Paqui Chips",
				"content_html": "<!-- raw HTML omitted -->\n<p>Every time my wife and I go grocery shopping, I keep an eye out for my favorite snack chip. I am pretty moderate about it and only grab a bag once in a while, but for the last few months, they just have not been available. Good for the waist but sad for the soul. Seriously, Paqui chips were the best chip on the market in my opinion. Properly hot, super good texture‚Äîjust leagues better than other similar chips. They were such a treat.</p>\n<p>Unfortunately, it seems that they are no more. I haven&rsquo;t been able to find them anywhere. It appears the brand has been discontinued.</p>\n<p>Someone on Reddit contacted the company and Paqui responded:</p>\n<blockquote>\n<p>We hate to be the bearer of bad news, but unfortunately, PAQUI Chips is no longer manufactured for sale. However, the decision to discontinue the brand is not made lightly because we know how disappointing it can be to look for your favorite snack and not find it.</p>\n</blockquote>\n<p>So yeah, discontinued. Bummer.</p>\n<p>But that&rsquo;s not the entire story. This company also created a product called the One Chip Challenge. A single chip made from the hottest peppers in the world, sold as a gimmick where you &ldquo;take the challenge&rdquo; and post/share your experience on social media. Good marketing, but it got too popular and too accessible imo. A 14yr old kid with a heart condition bought the product, ate it, and died from complications. Paqui discontinued that product quickly and kept shipping their other non-insane products, but it seems the fallout of the One Chip Challenge was too much and the entire brand is gone.</p>\n<p>I wanted to make a post about a snack I liked that is no longer available but it&rsquo;s weird to hold both sadness about the loss of a snack in one hand and to know that a child died because of a marketing gimmick from the same snack company. This mix of conflicting emotions‚Äîfondness and grief, nostalgia and sorrow‚Äîis hard to reconcile. It‚Äôs a bittersweet realization, knowing something that once brought joy is now tainted by tragedy. The enjoyment and sadness over a favorite snack being discontinued contrasting sharply with the tragic reason behind its discontinuation. Life is absurd and humans are messy.</p>\n<p>References:</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/One_Chip_Challenge\">https://en.wikipedia.org/wiki/One_Chip_Challenge</a></li>\n<li><a href=\"https://spicyfoodreviews.com/2024/07/paqui-chips-have-been-quietly-discontinued-here-are-three-possible-replacements\">spicyfoodreviews.com/2024/07/p&hellip;</a></li>\n<li><a href=\"https://apnews.com/article/paqui-spicy-chip-challenge-death-autopsy-f81c220c549ec497bcc626dec4fc2be4\">apnews.com/article/p&hellip;</a></li>\n</ul>\n",
				"content_text": "<img src=\"uploads/2024/paqui-haunted-ghost-pepper-chips-discontinued.webp\" width=\"600\" height=\"334\" alt=\"\">\n\nEvery time my wife and I go grocery shopping, I keep an eye out for my favorite snack chip. I am pretty moderate about it and only grab a bag once in a while, but for the last few months, they just have not been available. Good for the waist but sad for the soul. Seriously, Paqui chips were the best chip on the market in my opinion. Properly hot, super good texture‚Äîjust leagues better than other similar chips. They were such a treat.\n\nUnfortunately, it seems that they are no more. I haven't been able to find them anywhere. It appears the brand has been discontinued.\n\nSomeone on Reddit contacted the company and Paqui responded:\n\n> We hate to be the bearer of bad news, but unfortunately, PAQUI Chips is no longer manufactured for sale. However, the decision to discontinue the brand is not made lightly because we know how disappointing it can be to look for your favorite snack and not find it.\n\nSo yeah, discontinued. Bummer. \n\nBut that's not the entire story. This company also created a product called the One Chip Challenge. A single chip made from the hottest peppers in the world, sold as a gimmick where you \"take the challenge\" and post/share your experience on social media. Good marketing, but it got too popular and too accessible imo. A 14yr old kid with a heart condition bought the product, ate it, and died from complications. Paqui discontinued that product quickly and kept shipping their other non-insane products, but it seems the fallout of the One Chip Challenge was too much and the entire brand is gone. \n\nI wanted to make a post about a snack I liked that is no longer available but it's weird to hold both sadness about the loss of a snack in one hand and to know that a child died because of a marketing gimmick from the same snack company. This mix of conflicting emotions‚Äîfondness and grief, nostalgia and sorrow‚Äîis hard to reconcile. It‚Äôs a bittersweet realization, knowing something that once brought joy is now tainted by tragedy. The enjoyment and sadness over a favorite snack being discontinued contrasting sharply with the tragic reason behind its discontinuation. Life is absurd and humans are messy. \n\nReferences:\n\n* [https://en.wikipedia.org/wiki/One_Chip_Challenge](https://en.wikipedia.org/wiki/One_Chip_Challenge )\n* [spicyfoodreviews.com/2024/07/p...](https://spicyfoodreviews.com/2024/07/paqui-chips-have-been-quietly-discontinued-here-are-three-possible-replacements)\n* [apnews.com/article/p...](https://apnews.com/article/paqui-spicy-chip-challenge-death-autopsy-f81c220c549ec497bcc626dec4fc2be4)\n",
				"date_published": "2024-08-07T07:54:30-07:00",
				"url": "https://blog.roylindauer.com/2024/08/07/paqui-chips.html"
			},
			{
				"id": "http://royl.micro.blog/2024/07/28/time-for-gonna.html",
				
				"content_html": "<p>time for ‚òïÔ∏è gonna brew up some monsoon medley and do some drawing</p>\n",
				"content_text": "time for ‚òïÔ∏è gonna brew up some monsoon medley and do some drawing \n",
				"date_published": "2024-07-28T15:59:35-07:00",
				"url": "https://blog.roylindauer.com/2024/07/28/time-for-gonna.html",
				"tags": ["mental health"]
			},
			{
				"id": "http://royl.micro.blog/2024/07/28/golang-is-fun.html",
				
				"content_html": "<p>Golang is fun. I am not proficient with it yet, but I will be. Perfect companion language for me</p>\n",
				"content_text": "Golang is fun. I am not proficient with it yet, but I will be. Perfect companion language for me\n",
				"date_published": "2024-07-28T10:37:54-07:00",
				"url": "https://blog.roylindauer.com/2024/07/28/golang-is-fun.html"
			},
			{
				"id": "http://royl.micro.blog/2024/07/26/crowdstrike.html",
				"title": "CrowdStrike",
				"content_html": "<p>It&rsquo;s truly remarkable how much a failure this was from an ops perspective. Bypassing client rules for staging and force pushing directly to production without adequate testing coverage or protections in place to ensure a smooth deployment? Wild.</p>\n<p>Lessons to be learned from this?</p>\n<ol>\n<li>Test</li>\n<li>Test again</li>\n<li>Try rolling releases? I dunno, <em>anything but forcing a <strong>risky</strong> update to all of your clients</em></li>\n</ol>\n<p>Hindsight being what it is it may be easy to say &ldquo;Oh you just need to have protections in place so this sort of thing cannot happen&rdquo; but it sounds like CrowdStrike did, and deliberately chose to ignore them. Or maybe they just had a gap in those protections and unfortunately found out the hard way. Either way, catastrophic failure on CrowdStrike part. Rebuilding trust is hard.</p>\n<p>It&rsquo;s a good goal to aim for resiliency in your stack and protection <em>from</em> your 3rd party vendors. Being at the mercy of another company for your mission critical operations feels real bad so try to mitigate the impact a failure on their part can have. Easier said than done, for sure, but still something to aim for.</p>\n<p>Have backups and a rollback strategy (for when that&rsquo;s possible).</p>\n<p>#hugops for everyone still dealing with this.</p>\n",
				"content_text": "It's truly remarkable how much a failure this was from an ops perspective. Bypassing client rules for staging and force pushing directly to production without adequate testing coverage or protections in place to ensure a smooth deployment? Wild.\r\n\r\nLessons to be learned from this? \r\n\r\n1. Test\r\n2. Test again\r\n3. Try rolling releases? I dunno, _anything but forcing a **risky** update to all of your clients_\r\n\r\nHindsight being what it is it may be easy to say \"Oh you just need to have protections in place so this sort of thing cannot happen\" but it sounds like CrowdStrike did, and deliberately chose to ignore them. Or maybe they just had a gap in those protections and unfortunately found out the hard way. Either way, catastrophic failure on CrowdStrike part. Rebuilding trust is hard. \r\n\r\nIt's a good goal to aim for resiliency in your stack and protection _from_ your 3rd party vendors. Being at the mercy of another company for your mission critical operations feels real bad so try to mitigate the impact a failure on their part can have. Easier said than done, for sure, but still something to aim for. \r\n\r\nHave backups and a rollback strategy (for when that's possible). \r\n\r\n\\#hugops for everyone still dealing with this. \n",
				"date_published": "2024-07-26T09:19:32-07:00",
				"url": "https://blog.roylindauer.com/2024/07/26/crowdstrike.html",
				"tags": ["software engineering"]
			},
			{
				"id": "http://royl.micro.blog/2024/07/21/took-my-time.html",
				
				"content_html": "<p>Took my time this morning on a walk with our little corgi Olive. I let her lead, basically that means I let her stop and smell every rock and bush and explore evey yard on our way. So i followed suit and explored the neighborhood as well</p>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n",
				"content_text": "Took my time this morning on a walk with our little corgi Olive. I let her lead, basically that means I let her stop and smell every rock and bush and explore evey yard on our way. So i followed suit and explored the neighborhood as well \n\n<img src=\"uploads/2024/image.jpg\" width=\"600\" height=\"450\" alt=\"\"><img src=\"uploads/2024/5c04b810b6.jpg\" width=\"450\" height=\"600\" alt=\"\"><img src=\"uploads/2024/fb2cdd3f54.jpg\" width=\"600\" height=\"600\" alt=\"\"><img src=\"uploads/2024/1af67ef478.jpg\" width=\"450\" height=\"600\" alt=\"\">\n",
				"date_published": "2024-07-21T14:24:38-07:00",
				"url": "https://blog.roylindauer.com/2024/07/21/took-my-time.html",
				"tags": ["mental health"]
			},
			{
				"id": "http://royl.micro.blog/2024/07/18/make-buying-music.html",
				
				"content_html": "<p>Make buying music a thing again. I bought some records recently from Amoeba in LA and it was fucking amazing like this physical thing in my hands has real weight and real value and is something I can listen to without an active internet connection or monthly subscription.</p>\n",
				"content_text": "Make buying music a thing again. I bought some records recently from Amoeba in LA and it was fucking amazing like this physical thing in my hands has real weight and real value and is something I can listen to without an active internet connection or monthly subscription.\n",
				"date_published": "2024-07-18T10:23:51-07:00",
				"url": "https://blog.roylindauer.com/2024/07/18/make-buying-music.html"
			},
			{
				"id": "http://royl.micro.blog/2024/07/17/its-funny-how.html",
				
				"content_html": "<p>It&rsquo;s funny how saying something out loud can change the energy around it, and you realize that it&rsquo;s not actually a deeply held belief.</p>\n<p>Anyways I deleted a bunch of VMs and apps and distractions from my life.</p>\n",
				"content_text": "It's funny how saying something out loud can change the energy around it, and you realize that it's not actually a deeply held belief. \r\n\r\nAnyways I deleted a bunch of VMs and apps and distractions from my life. \n",
				"date_published": "2024-07-17T16:24:03-07:00",
				"url": "https://blog.roylindauer.com/2024/07/17/its-funny-how.html"
			},
			{
				"id": "http://royl.micro.blog/2024/07/16/blogging-for-me.html",
				"title": "Blogging for me is also in building the blog, at least that's what I want to believe",
				"content_html": "<p>What are your goals as a blogger?</p>\n<p>I am asking that question myself and what is coming up is that half of the fun of blogging for me is the public facing side of this, the community, the knowledge sharing.</p>\n<p>But the other half for me is actually building the blog. It&rsquo;s cultivating, and caring for, and pruning, and developing a boutique solution that is just my size. That is really, really fun to do!</p>\n<p>That&rsquo;s what I wanted to say anyways. After typing it out I kinda realized that, actually, I just like building things, but building a custom blogging platform for myself is a <em>huge distraction</em> from the other truly important things I want to do :D Also, for real it&rsquo;s the ADHD brain finding a juicy vein from which to suck dopamine and distract from doing the work.</p>\n<p>So what do I want out of blogging?</p>\n<p>I want to continue to share bite-size tips about software engineering, my love of devops, and to share my learning journey overall. I am currently learning how to be a leader and manager of other people. That is an insane skillset to develop and it might be good to share that experience. I am also learning how to manage ADHD after decades of ignoring it or not believing I had it. Interestingly enough there is a lot of overlap between those two tracks which is something I do want to explore in another post.</p>\n<p>Community is also important and part of what makes blogging so fun is the network.</p>\n<p>And finally to keep my skills sharp as a web developer type, specifically those skills with Ruby on Rails and Hotwire, I can work on my site monitor, or my wife&rsquo;s CRM, or client work :P</p>\n",
				"content_text": "What are your goals as a blogger?\n\nI am asking that question myself and what is coming up is that half of the fun of blogging for me is the public facing side of this, the community, the knowledge sharing. \n\nBut the other half for me is actually building the blog. It's cultivating, and caring for, and pruning, and developing a boutique solution that is just my size. That is really, really fun to do! \n\nThat's what I wanted to say anyways. After typing it out I kinda realized that, actually, I just like building things, but building a custom blogging platform for myself is a _huge distraction_ from the other truly important things I want to do :D Also, for real it's the ADHD brain finding a juicy vein from which to suck dopamine and distract from doing the work. \n\nSo what do I want out of blogging?\n\nI want to continue to share bite-size tips about software engineering, my love of devops, and to share my learning journey overall. I am currently learning how to be a leader and manager of other people. That is an insane skillset to develop and it might be good to share that experience. I am also learning how to manage ADHD after decades of ignoring it or not believing I had it. Interestingly enough there is a lot of overlap between those two tracks which is something I do want to explore in another post.\n\nCommunity is also important and part of what makes blogging so fun is the network.\n\nAnd finally to keep my skills sharp as a web developer type, specifically those skills with Ruby on Rails and Hotwire, I can work on my site monitor, or my wife's CRM, or client work :P \n",
				"date_published": "2024-07-16T16:44:46-07:00",
				"url": "https://blog.roylindauer.com/2024/07/16/blogging-for-me.html"
			},
			{
				"id": "http://royl.micro.blog/2024/06/29/rails-is-a.html",
				"title": "Rails is a joy to work with",
				"content_html": "<!-- raw HTML omitted -->\n",
				"content_text": "<p>Ruby on Rails is an absolute JOY to work with</p>\n",
				"date_published": "2024-06-29T10:14:47-07:00",
				"url": "https://blog.roylindauer.com/2024/06/29/rails-is-a.html"
			},
			{
				"id": "http://royl.micro.blog/2024/06/23/elden-ring-shadow.html",
				"title": "Elden Ring: Shadow of the Erdtree",
				"content_html": "<!-- raw HTML omitted -->\n",
				"content_text": "<p>The Shadow of the Erdtree DLC, or really, the giant expansion to the base game, is so good. It feels almost like Elden Ring 2.</p>\n<p>How is it going so far? I have almost explored the entirety of the Gravesite Plain and am working through Scadu Altus. I one-shot the Divine Beast Dancing Lion, and Rellana is now my favorite boss in all of Elden Ring :D The NPCs are all interesting so far. Moore is the best and must be protected at all costs.</p>\n<p>This has been worth the wait for sure.</p>\n<p>This feels like Dark Souls 1 to me, with how layered and connected the world is</p>\n",
				"date_published": "2024-06-23T08:02:17-07:00",
				"url": "https://blog.roylindauer.com/2024/06/23/elden-ring-shadow.html"
			},
			{
				"id": "http://royl.micro.blog/2024/06/12/i-listened-to.html",
				"title": "I listened to \"Dr. Jonathan Haidt: How Smartphones \u0026amp; Social Media Impact Mental Health \u0026amp; the Realistic Solutions\"",
				"content_html": "<!-- raw HTML omitted -->\n",
				"content_text": "<p>I listened to the podcast from Huberman Labs, \"<a href=\"https://www.hubermanlab.com/episode/dr-jonathan-haidt-how-smartphones-social-media-impact-mental-health-the-realistic-solutions\" target=\"_blank\" rel=\"noopener\">Dr. Jonathan Haidt: How Smartphones & Social Media Impact Mental Health & the Realistic Solutions</a>\". Highly recommend Dr. Hubberman podcast for deep dives into a wide array of topics, from ADHD to Fitness, Sleep Hygiene, and more.&nbsp;</p>\n<p>Really insightful talk about the impact that social media has had and is having on humans. I've been looking at my own habits around screens and internet consumption this year and I see how much of a negative it is in my life. Tell you what though, I am grateful that I had an analog childhood and did not have this unrestricted unfiltered access to the entirety of humanity (and they having access to me) in my pocket.</p>\n<p>The dark patterns of social media coupled with some dopamine and attention regulation issues I have has been a disaster for me. There is a path out of that though. Setting healthy boundaries, and actively working to reduce/replace screen time. My goal with my mobile phone is no more than an hour a day for things like, email, social, podcasts, and such.&nbsp;</p>\n",
				"date_published": "2024-06-12T10:39:36-07:00",
				"url": "https://blog.roylindauer.com/2024/06/12/i-listened-to.html"
			},
			{
				"id": "http://royl.micro.blog/2024/06/11/rss-club.html",
				"title": "RSS Club",
				"content_html": "<!-- raw HTML omitted -->\n",
				"content_text": "<p>I love this idea - <a href=\"https://theunderground.blog/\" target=\"_blank\" rel=\"noopener\">https://theunderground.blog/</a></p>\n<blockquote>\n<p>an experimental blog that is only available to read through a feed reader.</p>\n</blockquote>\n<p>I just love blogging though too, and think RSS is an under utilized delivery system. I am currently subscribed to a lot of blogs via RSS and it's just such a joy to see what treats are in my inbox in the morning. I think I will participate and make my own RSS only blog, or at least, be able to denote parts of this blog to be RSS only.</p>\n",
				"date_published": "2024-06-11T17:40:17-07:00",
				"url": "https://blog.roylindauer.com/2024/06/11/rss-club.html"
			},
			{
				"id": "http://royl.micro.blog/2024/06/11/ruby-on-rails.html",
				"title": "Ruby on Rails Love In",
				"content_html": "<!-- raw HTML omitted -->\n",
				"content_text": "<p>I am doing so much more Rails work on my own time and I just love this framework! I feel fast with it. </p>\n<p>Ruby's composability and flexibility powers up Rails and it really shines when you embrace doing things the \"Rails\" way. Though there are some things I think I will continue to keep to a min, like callbacks. I'll use service objects and commands and such for the more complex logic.</p>\n",
				"date_published": "2024-06-11T17:34:09-07:00",
				"url": "https://blog.roylindauer.com/2024/06/11/ruby-on-rails.html"
			},
			{
				"id": "http://royl.micro.blog/2024/06/04/form-objects-in.html",
				"title": "Form Objects in Ruby on Rails",
				"content_html": "<p>n Ruby on Rails, a Form Object is a design pattern used to handle the complexity of forms that don&rsquo;t map directly to a single model or have unique/complex validation and business logic. It encapsulates the logic related to form processing, validation, and data persistence, often combining attributes from multiple models or handling data that doesn&rsquo;t fit neatly into the traditional ActiveRecord model structure.</p>\n<p>Consider a UsersController that lets you create or edit a user. Typical CRUD. The form to create and edit a User may require a username or email, password, a full name. But then now consider an InvitationsController, which will also create a User, but this form may only require an email address. Our model validations for User will become a little gross with conditional validations, potentially virtual attributes to act as flags for model callbacks. Enter the Form Object.</p>\n<p>A Form Object is a new class that sits between the Controller and the Model.</p>\n<h2 id=\"key-characteristics-of-a-form-object-in-rails\">Key Characteristics of a Form Object in Rails:</h2>\n<ul>\n<li><!-- raw HTML omitted -->Encapsulation of Form Logic:<!-- raw HTML omitted --> Form objects centralize the form-related logic, keeping controllers and models cleaner by moving validation and other form-specific methods into a dedicated class.</li>\n<li><!-- raw HTML omitted -->Composite Forms:<!-- raw HTML omitted --> They are useful when a form interacts with multiple models. For example, a user registration form might need to create both a User and a Profile model.</li>\n<li><!-- raw HTML omitted -->Custom Validations:<!-- raw HTML omitted --> Form objects can have their own validations independent of the underlying models. This allows for more granular control over the validation process.</li>\n<li><!-- raw HTML omitted -->Data Persistence:<!-- raw HTML omitted --> While form objects can validate and manipulate data, they usually delegate the actual persistence of data to the relevant models.</li>\n<li><!-- raw HTML omitted -->Reusable Logic:<!-- raw HTML omitted --> By centralizing form logic, form objects can be reused across different parts of the application, making the codebase more maintainable and DRY (Don&rsquo;t Repeat Yourself).</li>\n</ul>\n<p>Active Model provides features to implement input filtering and validation. We can lean on Active Model to craft our Form Object, called <code>ApplicationForm</code>.</p>\n<pre tabindex=\"0\"><code>class ApplicationForm\n  include ActiveModel::API\n  include ActiveModel::Attributes\n\n  class &lt;&lt; self\n\n    # This method is used in the controller to create a new instance of the form\n    # and populate it with the params from the request.\n    # Usage: Lead::LeadGenForm.from(params.require(:lead_lead_gen_form))\n    def from(params)\n      new(params.permit(attribute_names.map(&amp;:to_sym)))\n    end\n  end\n\n  def save\n    return false unless valid?\n\n    with_transaction do\n      submit!\n    end\n  end\n\n  private\n\n  def with_transaction(&amp;)\n    ApplicationRecord.transaction(&amp;)\n  end\n\n  def submit!\n    raise NotImplementedError\n  end\nend\n\n</code></pre><p>We include a couple of ActiveModel concerns.</p>\n<p><!-- raw HTML omitted -->ActiveModel::API<!-- raw HTML omitted --> automatically gives us validation support! From the docs:</p>\n<blockquote>\n<p>Includes the required interface for an object to interact with Action Pack and Action View, using different Active Model modules. It includes model name introspections, conversions, translations, and validations. Besides that, it allows you to initialize the object with a hash of attributes, pretty much like Active Record does.</p>\n</blockquote>\n<p>Super useful for us.</p>\n<p>We also include <!-- raw HTML omitted -->ActiveModel::Attributes.<!-- raw HTML omitted --> Basically, this provides a DSL for defining a form object schema and parameter types.</p>\n<blockquote>\n<p>The Attributes module allows models to define attributes beyond simple Ruby readers and writers. Similar to Active Record attributes, which are typically inferred from the database schema, Active Model Attributes are aware of data types, can have default values, and can handle casting and serialization.<!-- raw HTML omitted --><!-- raw HTML omitted -->To use Attributes, include the module in your model class and define your attributes using the attribute macro. It accepts a name, a type, a default value, and any other options supported by the attribute type.</p>\n</blockquote>\n<p>The attribute method provided by ActiveModel::Attributes is used to define our form inputs.</p>\n<pre tabindex=\"0\"><code>class Lead::LeadGenForm &lt; ApplicationForm\n  attribute :name, :string\n  attribute :email, :string\n  attribute :message, :string\n\n  validates :name, :email, :message, presence: true\n  validates :email, format: {with: URI::MailTo::EMAIL_REGEXP}\n\n  attr_accessor :lead\n\n  private\n\n  def submit!\n    @lead = Lead.new({name: name, email: email, message: message})\n    @lead.save!\n    LeadsMailer.contact_form_auto_responder(lead: lead).deliver_later\n    LeadsMailer.contact_form_notification(lead: lead).deliver_later\n  end\nend\n</code></pre><p>Now in our Controller we can instantiate a new Form Object and use it in our view! Since the Form Object belongs to the presentation layer they can be used in view templates.</p>\n<pre tabindex=\"0\"><code>def create\n    @lead = Lead::LeadGenForm.from(params.require(:lead_lead_gen_form))\n\n    if @lead.save\n      redirect_to :thank_you\n    else\n      render :new, status: :unprocessable_entity\n    end\n  end\n</code></pre><p>We can use the Form Object just as we would use a model in our view:</p>\n<pre tabindex=\"0\"><code>&lt;%= form_with model: @lead, url: lead_gen_path do |form| %&gt;\n</code></pre><p>One thing I particularly like about this pattern is that I can easily write tests for my Form Objects and do not have to juggle as many model callbacks (and deal with that complexity in tests).</p>\n<p>Using Form Objects means I can achieve cleaner, more maintainable code, especially in complex form scenarios.</p>\n",
				"content_text": "n Ruby on Rails, a Form Object is a design pattern used to handle the complexity of forms that don't map directly to a single model or have unique/complex validation and business logic. It encapsulates the logic related to form processing, validation, and data persistence, often combining attributes from multiple models or handling data that doesn't fit neatly into the traditional ActiveRecord model structure.\n\nConsider a UsersController that lets you create or edit a user. Typical CRUD. The form to create and edit a User may require a username or email, password, a full name. But then now consider an InvitationsController, which will also create a User, but this form may only require an email address. Our model validations for User will become a little gross with conditional validations, potentially virtual attributes to act as flags for model callbacks. Enter the Form Object.\n\nA Form Object is a new class that sits between the Controller and the Model.\n\n## Key Characteristics of a Form Object in Rails:\n\n* <strong>Encapsulation of Form Logic:</strong> Form objects centralize the form-related logic, keeping controllers and models cleaner by moving validation and other form-specific methods into a dedicated class.\n* <strong>Composite Forms:</strong> They are useful when a form interacts with multiple models. For example, a user registration form might need to create both a User and a Profile model.\n* <strong>Custom Validations:</strong> Form objects can have their own validations independent of the underlying models. This allows for more granular control over the validation process.\n* <strong>Data Persistence:</strong> While form objects can validate and manipulate data, they usually delegate the actual persistence of data to the relevant models.\n* <strong>Reusable Logic:</strong> By centralizing form logic, form objects can be reused across different parts of the application, making the codebase more maintainable and DRY (Don't Repeat Yourself).\n\nActive Model provides features to implement input filtering and validation. We can lean on Active Model to craft our Form Object, called `ApplicationForm`.\n\n```\nclass ApplicationForm\n  include ActiveModel::API\n  include ActiveModel::Attributes\n\n  class << self\n\n    # This method is used in the controller to create a new instance of the form\n    # and populate it with the params from the request.\n    # Usage: Lead::LeadGenForm.from(params.require(:lead_lead_gen_form))\n    def from(params)\n      new(params.permit(attribute_names.map(&:to_sym)))\n    end\n  end\n\n  def save\n    return false unless valid?\n\n    with_transaction do\n      submit!\n    end\n  end\n\n  private\n\n  def with_transaction(&)\n    ApplicationRecord.transaction(&)\n  end\n\n  def submit!\n    raise NotImplementedError\n  end\nend\n\n```\n\nWe include a couple of ActiveModel concerns.\n\n<a href=\"https://api.rubyonrails.org/classes/ActiveModel/API.html\" target=\"_blank\" rel=\"noopener\">ActiveModel::API</a> automatically gives us validation support! From the docs:\n\n\n> Includes the required interface for an object to interact with Action Pack and Action View, using different Active Model modules. It includes model name introspections, conversions, translations, and validations. Besides that, it allows you to initialize the object with a hash of attributes, pretty much like Active Record does.\n\nSuper useful for us.\n\nWe also include <a href=\"https://api.rubyonrails.org/classes/ActiveModel/Attributes.html\" target=\"_blank\" rel=\"noopener\">ActiveModel::Attributes.</a> Basically, this provides a DSL for defining a form object schema and parameter types.\n\n> The Attributes module allows models to define attributes beyond simple Ruby readers and writers. Similar to Active Record attributes, which are typically inferred from the database schema, Active Model Attributes are aware of data types, can have default values, and can handle casting and serialization.<br><br>To use Attributes, include the module in your model class and define your attributes using the attribute macro. It accepts a name, a type, a default value, and any other options supported by the attribute type.\n\nThe attribute method provided by ActiveModel::Attributes is used to define our form inputs.\n\n```\nclass Lead::LeadGenForm < ApplicationForm\n  attribute :name, :string\n  attribute :email, :string\n  attribute :message, :string\n\n  validates :name, :email, :message, presence: true\n  validates :email, format: {with: URI::MailTo::EMAIL_REGEXP}\n\n  attr_accessor :lead\n\n  private\n\n  def submit!\n    @lead = Lead.new({name: name, email: email, message: message})\n    @lead.save!\n    LeadsMailer.contact_form_auto_responder(lead: lead).deliver_later\n    LeadsMailer.contact_form_notification(lead: lead).deliver_later\n  end\nend\n```\n\nNow in our Controller we can instantiate a new Form Object and use it in our view! Since the Form Object belongs to the presentation layer they can be used in view templates.\n\n```\ndef create\n    @lead = Lead::LeadGenForm.from(params.require(:lead_lead_gen_form))\n\n    if @lead.save\n      redirect_to :thank_you\n    else\n      render :new, status: :unprocessable_entity\n    end\n  end\n```\n\nWe can use the Form Object just as we would use a model in our view:\n\n```\n<%= form_with model: @lead, url: lead_gen_path do |form| %>\n```\n\nOne thing I particularly like about this pattern is that I can easily write tests for my Form Objects and do not have to juggle as many model callbacks (and deal with that complexity in tests).\n\nUsing Form Objects means I can achieve cleaner, more maintainable code, especially in complex form scenarios.\n",
				"date_published": "2024-06-04T11:32:28-07:00",
				"url": "https://blog.roylindauer.com/2024/06/04/form-objects-in.html"
			},
			{
				"id": "http://royl.micro.blog/2024/06/02/variable-swapping-in.html",
				"title": "Variable swapping in Ruby",
				"content_html": "<p>Swapping variables is a fundamental concept in programming, often encountered in algorithm development and problem-solving scenarios. While the process is straightforward in many languages, Ruby offers its own particularly elegant and concise syntax for this task. Let&rsquo;s first explore the more traditional approaches.</p>\n<p>First, you might use a temporary variable.</p>\n<pre tabindex=\"0\"><code>a = 10\nb = 12\nputs &quot;a: #{a}, b: #{b}&quot;\n\ntmp = a \na = b\nb = tmp\n\nputs &quot;a: #{a}, b: #{b}&quot;\n</code></pre><p>Outputs:</p>\n<pre tabindex=\"0\"><code>a: 10, b: 12\na: 12, b: 10\n</code></pre><p>A more clever way to do this is with the Bitwise XOR <code>^</code> operator.</p>\n<pre tabindex=\"0\"><code>a = 10\nb = 12\nputs &quot;a: #{a}, b: #{b}&quot;\n\na = a ^ b\nb = a ^ b\na = a ^ b\n\nputs &quot;a: #{a}, b: #{b}&quot;\n</code></pre><p>outputs:</p>\n<pre tabindex=\"0\"><code>a: 10, b: 12\na: 12, b: 10\n</code></pre><p>Weird, and looks like magic. Why would calling the same operation 3 times work? The <!-- raw HTML omitted -->^<!-- raw HTML omitted --> operator is a method on <!-- raw HTML omitted -->Integer<!-- raw HTML omitted -->, <!-- raw HTML omitted -->TrueClass<!-- raw HTML omitted -->, <!-- raw HTML omitted -->FalseClass<!-- raw HTML omitted -->, and <!-- raw HTML omitted -->NilClass<!-- raw HTML omitted --> that performs XOR.</p>\n<p>The trick here is that XOR <em>does not lose information</em>.</p>\n<p>The way I understand it is it basically does something like:</p>\n<pre tabindex=\"0\"><code>a = 1\nb = 2\nputs &quot;a: #{a}, b: #{b}&quot;\n\na = a + b # 1 + 2 = 3, a = 3\nb = a - b # 3 - 2 = 1, b = 1\na = a - b # 3 - 1 = 2, a = 2\n\nputs &quot;a: #{a}, b: #{b}&quot;\n</code></pre><h2 id=\"the-ruby-way\">The Ruby Way</h2>\n<p>The Ruby way to do this is actually super elegant! Using <!-- raw HTML omitted -->multiple assignment<!-- raw HTML omitted --> we can just swap the variables.</p>\n<pre tabindex=\"0\"><code>a = 1\nb = 2\nputs &quot;a: #{a}, b: #{b}&quot; # a: 1, b: 2\n\n# Swapping variables using multiple assignment\na, b = b, a\nputs &quot;a: #{a}, b: #{b}&quot; # a: 2, b: 1\n</code></pre><h2 id=\"strings\">Strings</h2>\n<p>What about strings? You cannot subtract a string in Ruby.</p>\n<pre tabindex=\"0\"><code>&quot;string&quot; ^ &quot;another string&quot;\nundefined method `^' for &quot;string&quot;:String (NoMethodError)\n</code></pre><p>Could do something like concatenate and substring but that just seems like it&rsquo;s missing the point. Maybe use a temporary variable for strings.</p>\n<pre tabindex=\"0\"><code>a = &quot;first&quot;\nb = &quot;second&quot;\nputs &quot;a: #{a}, b: #{b}&quot; # a: first, b: second\n\na = a + b # firstsecond\nb = a[0..((a.length - b.length)-1)] # first\na = a[b.length..a.length] # second \n\nputs &quot;a: #{a}, b: #{b}&quot; # a: second, b: first\n</code></pre><p>Ruby being awesome though, really just use multiple assignment :D</p>\n<h2 id=\"update\">Update</h2>\n<p>Okay I am more clear on how XOR actually works.</p>\n<blockquote>\n<p>XOR is a binary operation, it stands for &ldquo;exclusive or&rdquo;, that is to say the resulting bit evaluates to one if only exactly one of the bits is set.</p>\n</blockquote>\n<p>a = a ^ b means, if a is 0 or b is 0, return 0. If a is 1 OR b is 1, return 1, if a is 1 and b is 1, return 0. Using our example values of a = 10 and b = 12, and we convert to binary: a = 1010, and b = 1100.</p>\n<p>The math looks like:</p>\n<pre tabindex=\"0\"><code>a = a ^ b # 1010 ^ 1100 = 0110 (converted to decimal: 10 ^ 12 = 6)\nb = a ^ b # 0110 ^ 1100 = 1010 (6 ^ 12 = 10)\na = a ^ b # 0110 ^ 1010 = 1100 (6 ^ 10 = 12)\n</code></pre><p>Or, a is now 12, and b is now 10.</p>\n",
				"content_text": "Swapping variables is a fundamental concept in programming, often encountered in algorithm development and problem-solving scenarios. While the process is straightforward in many languages, Ruby offers its own particularly elegant and concise syntax for this task. Let's first explore the more traditional approaches.\n\nFirst, you might use a temporary variable.\n\n```\na = 10\nb = 12\nputs \"a: #{a}, b: #{b}\"\n\ntmp = a \na = b\nb = tmp\n\nputs \"a: #{a}, b: #{b}\"\n```\n\nOutputs:\n\n```\na: 10, b: 12\na: 12, b: 10\n```\n\nA more clever way to do this is with the Bitwise XOR `^` operator.\n\n\n```\na = 10\nb = 12\nputs \"a: #{a}, b: #{b}\"\n\na = a ^ b\nb = a ^ b\na = a ^ b\n\nputs \"a: #{a}, b: #{b}\"\n```\n\noutputs:\n\n```\na: 10, b: 12\na: 12, b: 10\n```\n\nWeird, and looks like magic. Why would calling the same operation 3 times work? The <code>^</code> operator is a method on <code>Integer</code>, <code>TrueClass</code>, <code>FalseClass</code>, and <code>NilClass</code> that performs XOR.\n\nThe trick here is that XOR _does not lose information_.\n\nThe way I understand it is it basically does something like:\n\n```\na = 1\nb = 2\nputs \"a: #{a}, b: #{b}\"\n\na = a + b # 1 + 2 = 3, a = 3\nb = a - b # 3 - 2 = 1, b = 1\na = a - b # 3 - 1 = 2, a = 2\n\nputs \"a: #{a}, b: #{b}\"\n```\n\n## The Ruby Way\n\nThe Ruby way to do this is actually super elegant! Using <a href=\"https://docs.ruby-lang.org/en/3.2/syntax/assignment_rdoc.html#label-Multiple+Assignment\" target=\"_blank\" rel=\"noopener\">multiple assignment</a> we can just swap the variables.\n\n```\na = 1\nb = 2\nputs \"a: #{a}, b: #{b}\" # a: 1, b: 2\n\n# Swapping variables using multiple assignment\na, b = b, a\nputs \"a: #{a}, b: #{b}\" # a: 2, b: 1\n```\n\n## Strings\n\nWhat about strings? You cannot subtract a string in Ruby.\n\n```\n\"string\" ^ \"another string\"\nundefined method `^' for \"string\":String (NoMethodError)\n```\n\nCould do something like concatenate and substring but that just seems like it's missing the point. Maybe use a temporary variable for strings.\n\n```\na = \"first\"\nb = \"second\"\nputs \"a: #{a}, b: #{b}\" # a: first, b: second\n\na = a + b # firstsecond\nb = a[0..((a.length - b.length)-1)] # first\na = a[b.length..a.length] # second \n\nputs \"a: #{a}, b: #{b}\" # a: second, b: first\n```\n\nRuby being awesome though, really just use multiple assignment :D\n\n## Update\n\nOkay I am more clear on how XOR actually works.\n\n> XOR is a binary operation, it stands for \"exclusive or\", that is to say the resulting bit evaluates to one if only exactly one of the bits is set.\n\na = a ^ b means, if a is 0 or b is 0, return 0. If a is 1 OR b is 1, return 1, if a is 1 and b is 1, return 0. Using our example values of a = 10 and b = 12, and we convert to binary: a = 1010, and b = 1100.\n\nThe math looks like:\n\n```\na = a ^ b # 1010 ^ 1100 = 0110 (converted to decimal: 10 ^ 12 = 6)\nb = a ^ b # 0110 ^ 1100 = 1010 (6 ^ 12 = 10)\na = a ^ b # 0110 ^ 1010 = 1100 (6 ^ 10 = 12)\n```\n\nOr, a is now 12, and b is now 10.\n",
				"date_published": "2024-06-02T21:49:06-07:00",
				"url": "https://blog.roylindauer.com/2024/06/02/variable-swapping-in.html"
			},
			{
				"id": "http://royl.micro.blog/2024/06/02/quirky-ruby-feature.html",
				"title": "Quirky Ruby Feature - Mixing Code and Data",
				"content_html": "<!-- raw HTML omitted -->\n<p><strong>END</strong>\nthis a line\nthis another line\n<!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<!-- raw HTML omitted -->\n",
				"content_text": "<p>Ruby has some fun quirky features. One of them is that you can mix code and data in a single file using the special keywords <code>__END__</code> and <code>DATA</code>. This is a weird concept, but Ruby allows you to use the script itself as a source of data.</p>\n<p>References:</p>\n<ul>\n<li><a href=\"https://docs.ruby-lang.org/en/3.0/Object.html#DATA\" target=\"_blank\" rel=\"noopener\">https://docs.ruby-lang.org/en/3.0/Object.html#DATA</a></li>\n<li><a href=\"https://ruby-doc.org/docs/keywords/1.9/Object.html#method-i-__END__\" target=\"_blank\" rel=\"noopener\">https://ruby-doc.org/docs/keywords/1.9/Object.html#method-i-__END__</a></li>\n</ul>\n<p>The documentation says about <code>__END__</code>:</p>\n<blockquote>\n<p>Denotes the end of the regular source code section of a program file. Lines below __END__ will not be executed. Those lines will be available via the special filehandle DATA. The following code will print out two stanzas of personal information. Note that __END__ has to be flush left, and has to be the only thing on its line.</p>\n</blockquote>\n<p>The way I use this is for one-off scripts. For example, doing coding challenges or demos. I used this extensively when doing the Advent of Code last year. I had contained the dataset and the logic for each daily exercise in a single script.</p>\n<pre class=\"language-ruby\"><code>DATA.each do | line |\n    p line.chomp\nend\n\n\n__END__\nthis a line\nthis another line\n</code></pre>\n<p>This will print out each line below <code>__END__.</code> Pretty neat!</p>\n<p>Basically, Ruby ignores everything after <code>__END__</code> when executing the script, BUT all of the data becomes available in the special object <code>DATA</code>, which is actually a <a href=\"https://docs.ruby-lang.org/en/3.0/File.html\" target=\"_blank\" rel=\"noopener\">File object</a>.</p>\n",
				"date_published": "2024-06-02T01:30:05-07:00",
				"url": "https://blog.roylindauer.com/2024/06/02/quirky-ruby-feature.html"
			},
			{
				"id": "http://royl.micro.blog/2024/05/22/momentum.html",
				"title": "Momentum",
				"content_html": "<!-- raw HTML omitted -->\n",
				"content_text": "<p>Started a new project. Super excited. All in. So much momentum and so much progress being made. Wow. First week in and I am feeling really good about this project. Nothing is more imprtant. Every thing is electric.</p>\n<p>And then I wake up at the start of week two, and, nothing. I just don‚Äôt care about this anymore. But, hey that looks cool, that‚Äôs a neat idea. Let‚Äôs build that thing!</p>\n<p>Forever this loop, until I die.</p>\n<p>Or probably not. But damn this loop is something. Just one of those things I have learned is part of having ADHD. Good to know, wish I knew it earlier. Still, good to know. I‚Äôm not just, lazy, or bad at this.</p>\n<p>There is a problem of momentum. I have an interest-based nervous system, and if this shit is not making my brain light up then it‚Äôs just not gonna happen. So I gotta hack it. Trick it. Use it. There‚Äôs a bit of self parenting I have to do. Discipline I also need to figure out. As you can imagine this makes a job difficult. Unexciting work is <em>painful</em> to do. But it‚Äôs possible. My problem is actually in the work I do outside of work. My hobbies, and other projects. They collect dust and die.</p>\n<p>Things to try:</p>\n<ul>\n<li>Long term rewards means nothing. Which does make long term planning more challenging. Short term rewards may be effective. That means, get a coffee for doing the task, buy yourself something for a hobby, and so on.</li>\n<li>Accountability buddy with my wife. There can be equal exchange as I can help her with her goals as well.</li>\n<li>Try to gamify the thing. Make a game out of it. Make a rewards system.</li>\n</ul>\n<p>I guess that‚Äôs literally all of the options :D</p>\n",
				"date_published": "2024-05-22T11:17:13-07:00",
				"url": "https://blog.roylindauer.com/2024/05/22/momentum.html"
			},
			{
				"id": "http://royl.micro.blog/2024/05/06/addicted-to-learning.html",
				"title": "Addicted to Learning",
				"content_html": "<!-- raw HTML omitted -->\n",
				"content_text": "<p>Watched a really fantastic video from <a href=\"https://www.youtube.com/@HealthyDev\">Healthy Software Developer</a> about how <a href=\"https://www.youtube.com/watch?v=AtextKpPO-w\">unchecked learning can be a dangerous addiction that can actually damage your software development career</a>.</p>\n<p>The bit that resonated with me, and had me feeling deeply personally attacked, was the bit about using tech learning as a way to procrastinate. Learning a new technology, or language, or framework, when I should be doing something else that I am responsible for. I felt that.</p>\n<p>I sat with my thoughts afterwards. Reflecting on my habits over the last 2 years. And yeah, not only have I been addicted to tech learning, I am doing it out of fear as well as a way to procrastinate.</p>\n<p>I recommend watching the video as he touches on many signs and traits of this sort of addiction and has some tips on when to (and not to) learn.</p>\n<h2>Procrastination and Distraction</h2>\n<p>My current job is a leadership role where I can act as mentor to other developers, and grow/scale my team into a high performing group. There is a shit load to learn, it‚Äôs an entirely new skill set. However instead of <em>learning those skills</em>, I have been learning things like GoLang, PHP Laravel, NextJS and ReactJS, HTMX, Kubernetes, etc. I mean, endless stuff, because it‚Äôs 1) comfortable and familiar, and 2) a good distraction from a real challenge that I have in front of me.</p>\n<p>I have also been using it as a way to procrastinate from doing other things in my life that are important. For example I <em>had</em> to learn an entirely new deployment strategy and toolkit to deploy my wife‚Äôs app because doing it to the old way was old. More destructively, I have been spending my evenings doing busy work instead of spending time with my wife and playing with my dog. I am not taking any time for leisure or relaxation. Work got stressy, so I got distracted.</p>\n<p>I spent like 3 weekends doing almost nothing but building a Laravel app ‚Äúto learn the framework‚Äù instead of getting a head start on weeding my garden, working on my adhd studies and practice, and doing chores around the house. I learned some things, but I didn‚Äôt need to learn those things.</p>\n<p>I had some things come up at work that were very difficult, and instead of reflecting and working on that I bought some books and online courses.</p>\n<p>Learning and reading is a familiar place. I often go here when things get difficult.</p>\n<h2>Fear</h2>\n<p>I had the rug pulled out from under me in 2022 when the company I was working for closed their doors. It shook me to my core. I was in a panic. And I began my job search. I was doing ‚ÄúDevOps‚Äù for the last 5 years, running infrastructure, pipelines, and automation for a cannabis startup. I learned a lot and my skills were fine. Like I know my shit. BUT. All of a sudden I am very vulnerable and I start questioning myself. Every job wants GoLang and K8S, or Rust and GCP. At least that is what the narrative unfolding in my brain is telling me. I start to think that my 20-ish years of development experience, 5+ years of devops experience, are no longer viable. And so I start to over commit to learning paths upon which I think my career depends.</p>\n<p>The problem is that I was not growing the skills that really matter when it comes to being a good prospect and good employee. I also was not getting really deep into the stack I was learning, so it was not like I was going to bring anything as a fresh Go developer ya know. I mean, yeah you gotta know how to program, you gotta know how to manage linux systems, docker, and so on. But you also need good communication skills, a different set of problem solving skills, leadership qualities. And if I was going to be more of an individual contributor, it would have been more valuable to dive deeper into what I know than to try to add some surface level knowledge of many other tools to my kit.</p>\n<p>I am also untangling years of untreated ADHD that have contributed to much of the fear and distraction. That has added some spiciness to the problem for sure!</p>\n<h2>Final Thoughts</h2>\n<p>While reflecting I realized that so much of my time in the last 2 years has been spent in a fear state, frantically trying to learn everything I can at at surface level, that I have neglected the real path of growth in front of me. I was also using it as a way to keep myself distracted so I didn‚Äôt have to face the real challenges I have going on in my life.</p>\n<p>What I know now, more deeply than I knew this morning. Is that my time is better spent facing the fear head on and being more skillful around what I commit to learning and how I do it.</p>\n<p>I am always going to be a student. Moving forward I will be more skillful and mindful of how I approach that.</p>\n",
				"date_published": "2024-05-06T11:12:09-07:00",
				"url": "https://blog.roylindauer.com/2024/05/06/addicted-to-learning.html"
			},
			{
				"id": "http://royl.micro.blog/2024/04/15/how-to-change.html",
				"title": "How to change a Users Password via Tinker in Laravel",
				"content_html": "<!-- raw HTML omitted -->\n",
				"content_text": "<p>Laravel has a pretty great console through a REPL called Tinker.</p>\n<p>From Tinker you can interact with your models.</p>\n<pre class=\"language-php\"><code>$user = App\\User::where('email', 'their@email.com')->first();\n$user->password = Hash::make('their new password');\n$user->save();</code></pre>\n<p>Super convenient! You just need SSH access to a server in the environment in which the app is running. I like to setup an \"ops\" box that lives in my production environment that is only accessible through a VPN. This gives me a management console to my app for emergencies or whatever!</p>\n<p>Even better is to launch a docker container on demand that only runs for the session and is killed when you exit Tinker. Anyways, I have become very accustomed to the Ruby on Rails console so having Tinker around is incredibly comforting :D</p>\n",
				"date_published": "2024-04-15T17:27:18-07:00",
				"url": "https://blog.roylindauer.com/2024/04/15/how-to-change.html"
			},
			{
				"id": "http://royl.micro.blog/2024/04/14/a-docker-based.html",
				"title": "A docker based setup for testing with Laravel",
				"content_html": "<!-- raw HTML omitted -->\n",
				"content_text": "<p>I experienced some annoying issues while running integration tests in a Laravel app. The <a href=\"https://hub.docker.com/_/mysql\" target=\"_blank\" rel=\"noopener\">official MySQL docker image</a> will create a user and a database for you which is very convenient, but that user does not have permission to create new databases. I configure my applications to use a separate database for testing, usually with a _testing suffix and so just hit a brick wall.</p>\n<p>The solution was to mount an entrypoint script, basically, some SQL statements I want to execute when the container is created. The script will create all of the necessary databases I need.</p>\n<p>The file: <strong>config/create-databases.sql</strong></p>\n<pre class=\"language-shell\"><code>CREATE DATABASE IF NOT EXISTS app DEFAULT CHARACTER SET = utf8;\nCREATE DATABASE IF NOT EXISTS app_testing DEFAULT CHARACTER SET = utf8;\nGRANT ALL PRIVILEGES ON app.* TO 'admin'@'%';\nGRANT ALL PRIVILEGES ON app_testing.* TO 'admin'@'%';\nFLUSH PRIVILEGES;</code></pre>\n<p>My <strong>docker-compose.yml</strong></p>\n<pre class=\"language-shell\"><code>services:\n    db:\n        image: mysql/mysql-server:8.0.28\n        environment:\n            MYSQL_ROOT_PASSWORD: root\n            MYSQL_DATABASE: app\n            MYSQL_USER: admin\n            MYSQL_PASSWORD: password\n        cap_add:\n            - SYS_NICE\n        ports:\n            - \"127.0.0.1:3306:3306\"\n        volumes:\n            - db:/var/lib/mysql\n            - ./config/create-databases.sql:/docker-entrypoint-initdb.d/create-databases.sql\nvolumes:\n    db:\n</code></pre>\n<p>Then into <code>.env.testing</code> I set <code>DB_DATABASE=app_testing</code> and now I can setup the test database and execute tests.</p>\n<pre class=\"language-shell\"><code>APP_ENV=testing php artisan migrate\nphp artisan test\n</code></pre>\n<p>Success!</p>\n",
				"date_published": "2024-04-14T21:15:32-07:00",
				"url": "https://blog.roylindauer.com/2024/04/14/a-docker-based.html"
			},
			{
				"id": "http://royl.micro.blog/2024/04/14/add-taggable-support.html",
				"title": "Add taggable support to my personal blog",
				"content_html": "<!-- raw HTML omitted -->\n<pre><code>def process(element)\n  return if element[:tags].nil?\n  return unless element.tag_list.empty?\n\n  element.tag_list = element[:tags]\n  element.save\nend\n</code></pre>\n<p>end\nend\n<!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<!-- raw HTML omitted -->\n<pre><code>  let(:blog) { create(:blog) }\n\n  let(:element) {\n    blog[:tags] = %w[tag1 tag2]\n    blog\n  }\n\n  it &quot;updates the tag list&quot; do\n    process\n    expect(element.reload.tag_list).to eq(%w[tag1 tag2])\n  end\n\n  context &quot;when the old tags field is nil&quot; do\n    let(:element) {\n      blog[:tags] = nil\n      blog\n    }\n\n    it &quot;does not update the tags&quot; do\n      process\n      expect(element.reload.tag_list).to eq([])\n    end\n  end\n\n  context &quot;when the blog post already has a tag list&quot; do\n    let(:element) {\n      blog[:tags] = %w[tag1 tag2]\n      create(:blog_with_tags, tag_list: %w[tag3 tag4])\n    }\n\n    it &quot;does not update the record&quot; do\n      process\n      expect(element.reload.updated_at).to eq(element.updated_at)\n      expect(element.reload.tag_list).to eq(%w[tag3 tag4])\n    end\n  end\nend\n</code></pre>\n<p>end\nend\n<!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<!-- raw HTML omitted -->\n<p>Finished in 2.52 seconds (files took 1.48 seconds to load)\n92 examples, 0 failures, 8 pending\n<!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<!-- raw HTML omitted -->\n",
				"content_text": "<p>Today I added taggable support to my blog. I do have blog posts tagged, but it's a simple comma-separated list in the database. I want to have a more robust system that allows me to query and filter by tags.</p>\n<p>I used the <a href=\"https://github.com/mbleigh/acts-as-taggable-on/\" target=\"_blank\" rel=\"noopener\">ruby gem <code>acts-as-taggable-on</code></a> to add taggable support to my blog.</p>\n<p>First thing was to install the gem by adding it to the Gemfile and running <code>bundle</code>.</p>\n<pre class=\"language-ruby\"><code>gem \"acts-as-taggable-on\", \"~> 10.0\"</code></pre>\n<p>Generate and run database migrations</p>\n<pre class=\"language-shell\"><code>$ bundle exec rake acts_as_taggable_on_engine:install:migrations\n$ bundle exec rails db:migrate\n</code></pre>\n<p>Don't forget to fail to read the instructions for when you are using MySQL, get some errors, then roll back and do it correctly.</p>\n<pre class=\"language-shell\"><code>$ bundle exec rails db:rollback\n$ bundle exec rake acts_as_taggable_on_engine:tag_names:collate_bin\n</code></pre>\n<p>There is another issue with MySQL. Seems to be an old issues resurfacing...</p>\n<pre class=\"language-shell\"><code>Mysql2::Error: Cannot drop index 'index_taggings_on_tag_id': needed in a foreign key constraint\n</code></pre>\n<p>The issue here is that you have to create an index for a foreign key constraint. It's required by MYSQL. We try to delete the index without dropping the foreign key first.</p>\n<p>Thanks to <a href=\"https://github.com/ndrix\" target=\"_blank\" rel=\"noopener\">ndrix</a> for <a href=\"https://github.com/mbleigh/acts-as-taggable-on/pull/983\" target=\"_blank\" rel=\"noopener\">the solution:</a></p>\n<pre class=\"language-ruby\"><code># https://github.com/mbleigh/acts-as-taggable-on/issues/978\n# remove_index ActsAsTaggableOn.taggings_table, :tag_id if index_exists?(ActsAsTaggableOn.taggings_table, :tag_id)\nif index_exists?(ActsAsTaggableOn.taggings_table, :tag_id)\n  remove_foreign_key :taggings, :tags\n  remove_index ActsAsTaggableOn.taggings_table, :tag_id\nend\n</code></pre>\n<p>Run the migration again, and success! No issues. Time to hook up tags.</p>\n<p>Add <code>acts_as_taggable_on :tags</code> to the Blog model. Update the admin blog form. And update the admin blog controller to accept <code>tag_list</code> in the params.</p>\n<p>Ok now all the fun stuff. I have existing tags in the database as a comma-separated list. I need to migrate these tags to the new taggable system. I am going to use Maintenance Tasks to do this because it's more fun than just hopping into the console and running some queries.</p>\n<p>Here's a very simple task that will migrate the tags from the old tags column to the new taggable system. I have configured soft deletes so I also include deleted records in the collection.</p>\n<pre class=\"language-ruby\"><code>module Maintenance\n  class MigrateBlogTagsTask < MaintenanceTasks::Task\n    def collection\n      Blog.with_deleted.all\n    end\n\n    def process(element)\n      return if element[:tags].nil?\n      return unless element.tag_list.empty?\n\n      element.tag_list = element[:tags]\n      element.save\n    end\n  end\nend\n</code></pre>\n<p>Don't forget to create some tests for the maintenance task. Here's a spec that covers the happy path and a couple of edge cases:</p>\n<pre class=\"language-ruby\"><code>module Maintenance\n  RSpec.describe MigrateBlogTagsTask do\n    describe \"#process\" do\n      subject(:process) { described_class.process(element) }\n\n      let(:blog) { create(:blog) }\n\n      let(:element) {\n        blog[:tags] = %w[tag1 tag2]\n        blog\n      }\n\n      it \"updates the tag list\" do\n        process\n        expect(element.reload.tag_list).to eq(%w[tag1 tag2])\n      end\n\n      context \"when the old tags field is nil\" do\n        let(:element) {\n          blog[:tags] = nil\n          blog\n        }\n\n        it \"does not update the tags\" do\n          process\n          expect(element.reload.tag_list).to eq([])\n        end\n      end\n\n      context \"when the blog post already has a tag list\" do\n        let(:element) {\n          blog[:tags] = %w[tag1 tag2]\n          create(:blog_with_tags, tag_list: %w[tag3 tag4])\n        }\n\n        it \"does not update the record\" do\n          process\n          expect(element.reload.updated_at).to eq(element.updated_at)\n          expect(element.reload.tag_list).to eq(%w[tag3 tag4])\n        end\n      end\n    end\n  end\nend\n</code></pre>\n<p>Run the maintenance task to migrate the tags.</p>\n<pre class=\"language-ruby\"><code>$ bundle exec maintenance_tasks perform Maintenance::MigrateBlogTagsTask\n</code></pre>\n<p>I do have some existing tests for my Blog model and requests. I need to update these tests to use the new taggable system. It's mostly some minor changes to the tests to use the new tag_list attribute. Pretty easy to update. I made the necessary updates, and my tests passed:</p>\n<pre class=\"language-shell\"><code>$ bundle exec rspec\n\nFinished in 2.52 seconds (files took 1.48 seconds to load)\n92 examples, 0 failures, 8 pending\n</code></pre>\n<p>And I think that's all for this session. I have better tags.</p>\n<p>Next steps would be to:</p>\n<ul>\n<li>Create a Stimulus Controller to create auto suggestion for tags when editing or creating a blog entry</li>\n<li>Roll out to Project model</li>\n<li>Clean up and remove the old fields from my tables and old model Concerns</li>\n</ul>\n",
				"date_published": "2024-04-14T20:59:41-07:00",
				"url": "https://blog.roylindauer.com/2024/04/14/add-taggable-support.html"
			},
			{
				"id": "http://royl.micro.blog/2024/04/13/trying-to-dispatch.html",
				"title": "Trying to Dispatch Jobs via Tinker with Laravel and SQLite",
				"content_html": "<!-- raw HTML omitted -->\n<p>$recipe = Recipe::find(5);</p>\n<p>[!] Aliasing &lsquo;Recipe&rsquo; to &lsquo;App\\Models\\Recipe&rsquo; for this Tinker session.</p>\n<p>Illuminate\\Database\\QueryException  SQLSTATE[HY000]: General error: 10 disk I/O error (Connection: sqlite, SQL: select * from &ldquo;recipes&rdquo; where &ldquo;recipes&rdquo;.&ldquo;id&rdquo; = 17 limit 1).<!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<!-- raw HTML omitted -->\n<p>Illuminate\\Database\\QueryException  SQLSTATE[HY000]: General error: 10 disk I/O error (Connection: sqlite, SQL: select * from &ldquo;users&rdquo;).</p>\n<blockquote>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n</blockquote>\n<!-- raw HTML omitted -->\n",
				"content_text": "<p>I've been learning Laravel queues and jobs. While creating some jobs I wanted a quick way to test by executing the job. I just want to see it run. There wasn't a super clear path for me here so my first thought was let's just quickly create a one off controller action. To replay that job over again I just had to refresh my browser. Not great, super odd, but also not the end of the world. Yes, of course I could write some actual tests (and I will), but I really just want a way to execute services and such in my app ad hoc.</p>\n<pre class=\"language-php\"><code>public function testing_this_job()\n{\n   $recipe = Recipe::find(5); \n   ProcessRecipeImport::dispatch($recipe);\n}</code></pre>\n<p>Yeah it works, but is <em>_super_</em> clunky. Let's try tinker.</p>\n<pre class=\"language-shell\"><code>php artisan tinker\n\n$recipe = Recipe::find(5);\n\n[!] Aliasing 'Recipe' to 'App\\Models\\Recipe' for this Tinker session.\n\n   Illuminate\\Database\\QueryException  SQLSTATE[HY000]: General error: 10 disk I/O error (Connection: sqlite, SQL: select * from \"recipes\" where \"recipes\".\"id\" = 17 limit 1).</code></pre>\n<p>Hmm that didn't work. WHY? The SQLite database does exist and does work as I can view data in my app when I run the server. I can also connect to the db via DataGrip and query data. I've tried closing all connections. Still cannot read from tables. Do I need to somehow load db configuration manually when I start a tinker session? At this point I've searched the internet for answers and tried to ChatGPT my way through this to no avail. Totally stuck.</p>\n<p>For being the default database connection I would expect this to just work out of the box.</p>\n<p>Hours of searching and I have come to realize that SQLite is maybe not great and shouldn't be used even for development? I dunno, it's probably fine, but there is _something_ with tinker and psysh that is preventing me from interacting with the database. It smells like the db connection is already opened and when I try to connect I get the error, because of the existing connection. When I connect to the console, then run from my terminal:</p>\n<pre class=\"language-shell\"><code>$ sudo lsof | grep database.sqlite\nphp     74738   roylindauer     7u  REG     1,18    339968  65235486 /Users/roylindauer/code/laravel-app/database/database-copy.sqlite\n</code></pre>\n<p>It's open. So does that mean when I try to query a record it tries to open another connection which fails? Seems that way. Just not sure. And i'm growing impatient. It also fails on a brand new app:</p>\n<pre class=\"language-shell\"><code>$ composer create-project laravel/laravel:^11.0 laravel-testing-sqlite\n$ cd laravel-testing-sqlite\n$ php artisan tinker\nPsy Shell v0.12.3 (PHP 8.3.4 ‚Äî cli) by Justin Hileman\n> User::all()\n[!] Aliasing 'User' to 'App\\Models\\User' for this Tinker session.\n\n   Illuminate\\Database\\QueryException  SQLSTATE[HY000]: General error: 10 disk I/O error (Connection: sqlite, SQL: select * from \"users\").\n\n></code></pre>\n<p>This has to be a MacOS thing. Or maybe an Apple Silicon thing? I kinda want to try on Ubuntu next. Other things it could be: the version of SQLite I am running? Something with my homebrew setup? I did install PHP 8.3.4 via ASDF maybe the answer lies there.</p>\n<p>Next I tried PHP 8.2.17. I updated my `.tool-versions` file to use PHP 8.2.17 then executed `asdf install`. I was asked to install command line developer tools, which should have already been installed. That's wild. Doing that I guess, then installing PHP 8.2.17 again. No matter I am still prompted to install command line developer tools, which are already installed. I tried a new terminal session. I tried rebooting. No success.</p>\n<p>At this point I am going to do two things: Abandon SQLite, and use MySQL and Docker. <br><br>I am a little disappointed I couldn't figure the issue out with SQLite. <br><br>Running the database through MySQL and Docker and this all works fine! I can finally query my database! So back to my initial problem. How do I dispatch jobs through tinker?</p>\n<pre class=\"language-php\"><code>$recipe = Recipe::find(5); \nProcessRecipeImport::dispatch($recipe);</code></pre>\n<p>This actually does not work! The <a href=\"https://laravel.com/docs/11.x/artisan#usage\" target=\"_blank\" rel=\"noopener\">dispatch helper function depends on garbage collection</a>.</p>\n<blockquote>\n<p>The dispatch helper function and dispatch method on the Dispatchable class depends on garbage collection to place the job on the queue. Therefore, when using tinker, you should use Bus::dispatch or Queue::push to dispatch jobs.</p>\n</blockquote>\n<p>So the correct way to quickly dispatch my job and let me get back to tinkering is:</p>\n<pre class=\"language-php\"><code>$recipe = Recipe::find(5); \n\\Bus::dispatch(new App\\Jobs\\ProcessRecipeImport($recipe));</code></pre>\n<p>Wonderful! Tinker is awesome!</p>\n",
				"date_published": "2024-04-13T22:01:14-07:00",
				"url": "https://blog.roylindauer.com/2024/04/13/trying-to-dispatch.html"
			},
			{
				"id": "http://royl.micro.blog/2024/04/01/use-ansible-to.html",
				"title": "Use Ansible to Configure your Workstation",
				"content_html": "<!-- raw HTML omitted -->\n<p>vars_files:\n- vars/main.yml</p>\n<p>roles:\n- geerlingguy.dotfiles\n- geerlingguy.mac.homebrew</p>\n<p>tasks: []<!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<!-- raw HTML omitted -->\n<p>homebrew_cask_accept_external_apps: true\nhomebrew_installed_packages:</p>\n<ul>\n<li>libyaml</li>\n<li>curl</li>\n<li>coreutils</li>\n<li>git</li>\n<li>git-crypt</li>\n<li>terraform</li>\n<li>wget</li>\n<li>zsh</li>\n<li>doctl</li>\n<li>go</li>\n<li>tflint</li>\n<li>asdf</li>\n<li>direnv\nhomebrew_cask_appdir: /Applications\nhomebrew_cask_apps:</li>\n<li>iterm2</li>\n<li>slack</li>\n<li>visual-studio-code</li>\n<li>docker</li>\n<li>postman</li>\n<li>spotify</li>\n<li>notion</li>\n<li>discord<!-- raw HTML omitted --><!-- raw HTML omitted --></li>\n</ul>\n<!-- raw HTML omitted -->\n",
				"content_text": "<p>Let me show you a simple and easy way to manage your MacOS workstation using Ansible. <a href=\"https://www.ansible.com/\" target=\"_blank\" rel=\"noopener\">Ansible is awesome,</a> and we should automate all the things.</p>\n<p>I tinkered with doing this myself from scratch with some success, but I've discovered Jeff Geerling's incredible collection of Ansible roles and collections and didn't look back. They are simple, and ready to go.</p>\n<p>Take a look at my <a href=\"https://github.com/roylindauer/workstation\" target=\"_blank\" rel=\"noopener\">workstation repository</a>, also do check out <a href=\"https://ansible.jeffgeerling.com/\" target=\"_blank\" rel=\"noopener\">Jeff's Ansible work</a>.</p>\n<p>First you need to install the dependencies. I am using a <a href=\"https://galaxy.ansible.com/ui/standalone/roles/geerlingguy/dotfiles/documentation/\" target=\"_blank\" rel=\"noopener\">dotfiles Ansible role</a> to manage my dotfiles, and a collection of mac roles:</p>\n<pre class=\"language-shell\"><code>ansible-galaxy collection install geerlingguy.mac\nansible-galaxy role install geerlingguy.dotfiles</code></pre>\n<p>The mac collection has roles for homebrew, mas, and dock, but I am only concerned with homebrew to install some of my favorite packages. Learn more at <a href=\"https://github.com/geerlingguy/ansible-collection-mac\" target=\"_blank\" rel=\"noopener\">https://github.com/geerlingguy/ansible-collection-mac</a>.</p>\n<p>Create a playbook <em>setup-macos-workstation.yml</em>:</p>\n<pre class=\"language-shell\"><code>---\n- hosts: localhost\n  name: Setup Workstation\n  user: roy\n  connection: local\n\n  vars_files:\n    - vars/main.yml\n\n  roles:\n    - geerlingguy.dotfiles\n    - geerlingguy.mac.homebrew\n\n  tasks: []</code></pre>\n<p>The next thing is to define the dotfiles you want and where to get them, and then also what you want to install via homebrew.</p>\n<p>Create <em>vars/main.yml</em></p>\n<pre class=\"language-xml\"><code>---\ndotfiles_repo: \"https://github.com/roylindauer/dotfiles.git\"\ndotfiles_repo_version: main\ndotfiles_files:\n  - .zshrc\n  - .gitconfig\n  - .railsrc\n  - .aliases\n  - .vimrc\n  - rails-template.rb\n\nhomebrew_cask_accept_external_apps: true\nhomebrew_installed_packages:\n  - libyaml\n  - curl\n  - coreutils\n  - git\n  - git-crypt\n  - terraform\n  - wget\n  - zsh\n  - doctl\n  - go\n  - tflint\n  - asdf\n  - direnv\nhomebrew_cask_appdir: /Applications\nhomebrew_cask_apps:\n  - iterm2\n  - slack\n  - visual-studio-code\n  - docker\n  - postman\n  - spotify\n  - notion\n  - discord</code></pre>\n<p>Run the playbook to download your dotfiles and symlink them to your home directory, and then install all of the packages with brew.</p>\n<pre class=\"language-shell\"><code>ansible-playbook setup-macos-workstation.yml</code></pre>\n<p>This gets me like 80% of the way for setting up my workstation. Some things you have to configure and install manually. But it's nice to have my workstation expressed as code.</p>\n",
				"date_published": "2024-04-01T20:52:22-07:00",
				"url": "https://blog.roylindauer.com/2024/04/01/use-ansible-to.html"
			}
	]
}
